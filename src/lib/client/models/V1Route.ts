/* tslint:disable */
/* eslint-disable */
/**
 * headscale/v1/headscale.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1Node } from './V1Node';
import {
    V1NodeFromJSON,
    V1NodeFromJSONTyped,
    V1NodeToJSON,
    V1NodeToJSONTyped,
} from './V1Node';

/**
 * 
 * @export
 * @interface V1Route
 */
export interface V1Route {
    /**
     * 
     * @type {string}
     * @memberof V1Route
     */
    id?: string;
    /**
     * 
     * @type {V1Node}
     * @memberof V1Route
     */
    node?: V1Node;
    /**
     * 
     * @type {string}
     * @memberof V1Route
     */
    prefix?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V1Route
     */
    advertised?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof V1Route
     */
    enabled?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof V1Route
     */
    isPrimary?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof V1Route
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1Route
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1Route
     */
    deletedAt?: Date;
}

/**
 * Check if a given object implements the V1Route interface.
 */
export function instanceOfV1Route(value: object): value is V1Route {
    return true;
}

export function V1RouteFromJSON(json: any): V1Route {
    return V1RouteFromJSONTyped(json, false);
}

export function V1RouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Route {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'node': json['node'] == null ? undefined : V1NodeFromJSON(json['node']),
        'prefix': json['prefix'] == null ? undefined : json['prefix'],
        'advertised': json['advertised'] == null ? undefined : json['advertised'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'isPrimary': json['isPrimary'] == null ? undefined : json['isPrimary'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': json['deletedAt'] == null ? undefined : (new Date(json['deletedAt'])),
    };
}

export function V1RouteToJSON(json: any): V1Route {
    return V1RouteToJSONTyped(json, false);
}

export function V1RouteToJSONTyped(value?: V1Route | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'node': V1NodeToJSON(value['node']),
        'prefix': value['prefix'],
        'advertised': value['advertised'],
        'enabled': value['enabled'],
        'isPrimary': value['isPrimary'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'deletedAt': value['deletedAt'] == null ? undefined : ((value['deletedAt']).toISOString()),
    };
}

