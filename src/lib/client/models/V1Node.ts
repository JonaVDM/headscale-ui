/* tslint:disable */
/* eslint-disable */
/**
 * headscale/v1/headscale.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1RegisterMethod } from './V1RegisterMethod';
import {
    V1RegisterMethodFromJSON,
    V1RegisterMethodFromJSONTyped,
    V1RegisterMethodToJSON,
    V1RegisterMethodToJSONTyped,
} from './V1RegisterMethod';
import type { V1PreAuthKey } from './V1PreAuthKey';
import {
    V1PreAuthKeyFromJSON,
    V1PreAuthKeyFromJSONTyped,
    V1PreAuthKeyToJSON,
    V1PreAuthKeyToJSONTyped,
} from './V1PreAuthKey';
import type { V1User } from './V1User';
import {
    V1UserFromJSON,
    V1UserFromJSONTyped,
    V1UserToJSON,
    V1UserToJSONTyped,
} from './V1User';

/**
 * 
 * @export
 * @interface V1Node
 */
export interface V1Node {
    /**
     * 
     * @type {string}
     * @memberof V1Node
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Node
     */
    machineKey?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Node
     */
    nodeKey?: string;
    /**
     * 
     * @type {string}
     * @memberof V1Node
     */
    discoKey?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1Node
     */
    ipAddresses?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof V1Node
     */
    name?: string;
    /**
     * 
     * @type {V1User}
     * @memberof V1Node
     */
    user?: V1User;
    /**
     * 
     * @type {Date}
     * @memberof V1Node
     */
    lastSeen?: Date;
    /**
     * 
     * @type {Date}
     * @memberof V1Node
     */
    expiry?: Date;
    /**
     * 
     * @type {V1PreAuthKey}
     * @memberof V1Node
     */
    preAuthKey?: V1PreAuthKey;
    /**
     * 
     * @type {Date}
     * @memberof V1Node
     */
    createdAt?: Date;
    /**
     * 
     * @type {V1RegisterMethod}
     * @memberof V1Node
     */
    registerMethod?: V1RegisterMethod;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1Node
     */
    forcedTags?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1Node
     */
    invalidTags?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1Node
     */
    validTags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof V1Node
     */
    givenName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V1Node
     */
    online?: boolean;
}



/**
 * Check if a given object implements the V1Node interface.
 */
export function instanceOfV1Node(value: object): value is V1Node {
    return true;
}

export function V1NodeFromJSON(json: any): V1Node {
    return V1NodeFromJSONTyped(json, false);
}

export function V1NodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Node {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'machineKey': json['machineKey'] == null ? undefined : json['machineKey'],
        'nodeKey': json['nodeKey'] == null ? undefined : json['nodeKey'],
        'discoKey': json['discoKey'] == null ? undefined : json['discoKey'],
        'ipAddresses': json['ipAddresses'] == null ? undefined : json['ipAddresses'],
        'name': json['name'] == null ? undefined : json['name'],
        'user': json['user'] == null ? undefined : V1UserFromJSON(json['user']),
        'lastSeen': json['lastSeen'] == null ? undefined : (new Date(json['lastSeen'])),
        'expiry': json['expiry'] == null ? undefined : (new Date(json['expiry'])),
        'preAuthKey': json['preAuthKey'] == null ? undefined : V1PreAuthKeyFromJSON(json['preAuthKey']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'registerMethod': json['registerMethod'] == null ? undefined : V1RegisterMethodFromJSON(json['registerMethod']),
        'forcedTags': json['forcedTags'] == null ? undefined : json['forcedTags'],
        'invalidTags': json['invalidTags'] == null ? undefined : json['invalidTags'],
        'validTags': json['validTags'] == null ? undefined : json['validTags'],
        'givenName': json['givenName'] == null ? undefined : json['givenName'],
        'online': json['online'] == null ? undefined : json['online'],
    };
}

export function V1NodeToJSON(json: any): V1Node {
    return V1NodeToJSONTyped(json, false);
}

export function V1NodeToJSONTyped(value?: V1Node | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'machineKey': value['machineKey'],
        'nodeKey': value['nodeKey'],
        'discoKey': value['discoKey'],
        'ipAddresses': value['ipAddresses'],
        'name': value['name'],
        'user': V1UserToJSON(value['user']),
        'lastSeen': value['lastSeen'] == null ? undefined : ((value['lastSeen']).toISOString()),
        'expiry': value['expiry'] == null ? undefined : ((value['expiry']).toISOString()),
        'preAuthKey': V1PreAuthKeyToJSON(value['preAuthKey']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'registerMethod': V1RegisterMethodToJSON(value['registerMethod']),
        'forcedTags': value['forcedTags'],
        'invalidTags': value['invalidTags'],
        'validTags': value['validTags'],
        'givenName': value['givenName'],
        'online': value['online'],
    };
}

