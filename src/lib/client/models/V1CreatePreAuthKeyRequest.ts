/* tslint:disable */
/* eslint-disable */
/**
 * headscale/v1/headscale.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1CreatePreAuthKeyRequest
 */
export interface V1CreatePreAuthKeyRequest {
    /**
     * 
     * @type {string}
     * @memberof V1CreatePreAuthKeyRequest
     */
    user?: string;
    /**
     * 
     * @type {boolean}
     * @memberof V1CreatePreAuthKeyRequest
     */
    reusable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof V1CreatePreAuthKeyRequest
     */
    ephemeral?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof V1CreatePreAuthKeyRequest
     */
    expiration?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof V1CreatePreAuthKeyRequest
     */
    aclTags?: Array<string>;
}

/**
 * Check if a given object implements the V1CreatePreAuthKeyRequest interface.
 */
export function instanceOfV1CreatePreAuthKeyRequest(value: object): value is V1CreatePreAuthKeyRequest {
    return true;
}

export function V1CreatePreAuthKeyRequestFromJSON(json: any): V1CreatePreAuthKeyRequest {
    return V1CreatePreAuthKeyRequestFromJSONTyped(json, false);
}

export function V1CreatePreAuthKeyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CreatePreAuthKeyRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'] == null ? undefined : json['user'],
        'reusable': json['reusable'] == null ? undefined : json['reusable'],
        'ephemeral': json['ephemeral'] == null ? undefined : json['ephemeral'],
        'expiration': json['expiration'] == null ? undefined : (new Date(json['expiration'])),
        'aclTags': json['aclTags'] == null ? undefined : json['aclTags'],
    };
}

export function V1CreatePreAuthKeyRequestToJSON(json: any): V1CreatePreAuthKeyRequest {
    return V1CreatePreAuthKeyRequestToJSONTyped(json, false);
}

export function V1CreatePreAuthKeyRequestToJSONTyped(value?: V1CreatePreAuthKeyRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': value['user'],
        'reusable': value['reusable'],
        'ephemeral': value['ephemeral'],
        'expiration': value['expiration'] == null ? undefined : ((value['expiration']).toISOString()),
        'aclTags': value['aclTags'],
    };
}

